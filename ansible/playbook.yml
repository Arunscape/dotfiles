---
- name: I use Arch, btw
  hosts: localhost
  connection: local
  vars_files:
    - vars/pacman_packages.yml
    - vars/aur_packages.yml

  tasks:
    - name: Update pacman.conf Settings
      become: true
      ansible.builtin.lineinfile:
        path: /etc/pacman.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      loop:
        - { regexp: '^#Color', line: 'Color' }
        - { regexp: '^#VerbosePkgLists', line: 'VerbosePkgLists' }
        - { regexp: '^#ParallelDownloads', line: 'ParallelDownloads = 12' }

    - name: ILoveCandy
      become: true
      ansible.builtin.lineinfile:
        path: /etc/pacman.conf
        line: ILoveCandy
        insertafter: '^Color'

    - name: Install packages
      become: true
      ansible.builtin.package:
        name: "{{ pacman_packages }}"
        state: present

    - name: Rustup default stable # noqa: no-changed-when
      ansible.builtin.shell: |
        rustup default stable
        rustup update

    - name: Create AUR-Builder User
      become: true
      ansible.builtin.user:
        name: aur_builder

    - name: Give aur_builder user Pacman privileges
      become: true
      ansible.builtin.lineinfile:
        path: /etc/sudoers.d/aur_builder-allow-to-sudo-pacman
        state: present
        line: "aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman"
        validate: /usr/sbin/visudo -cf %s
        create: true
        mode: "0440"

    - name: Install paru
      become: true
      become_user: aur_builder
      args:
        creates: /usr/bin/paru
      ansible.builtin.shell: |
        set -o pipefail
        rustup default stable
        git clone https://aur.archlinux.org/paru.git
        cd paru
        yes | makepkg -si
        cd -
        rm -rf paru

    # idk why this fails
    # - name: Install AUR packages
    #   become: true
    #   become_user: aur_builder
    #   ignore_errors: true # noqa: ignore-errors
    #   community.general.pacman:
    #     executable: paru
    #     name: "{{ aur_packages }}"
    #     state: present

    - name: Install AUR packages
      become: true
      become_user: aur_builder
      kewlfft.aur.aur:
        use: paru
        name: "{{ aur_packages }}"
        state: present

    - name: Check if dotfiles cloned
      ansible.builtin.stat:
        path: /home/arunscape/dotfiles
      register: dotfiles_folder

    - name: Clone dotfiles
      when: not dotfiles_folder.stat.exists
      ansible.builtin.git: # noqa: git-latest
        repo: https://github.com/Arunscape/dotfiles.git
        dest: /home/arunscape/dotfiles

    - name: Symlinks # noqa: no-changed-when
      ansible.builtin.shell: |
        ../symlinks.sh

    - name: Greetd setup
      become: true
      ansible.builtin.copy:
        dest: /etc/greetd/config.toml
        mode: "0664"
        content: |
          [terminal]
          vt = 1

          [default_session]
          command = "tuigreet --cmd Hyprland"

          [initial_session]
          command = "Hyprland"
          user = "arunscape"

    # find a way to add a when condition
    # - name: Set zfs import cache file
    #   become: true
    #   async: true
    #   poll: 0
    #   ansible.builtin.shell: |
    #     zpool set cachefile=/etc/zfs/zpool.cache znas

    - name: Enable Services
      become: true
      ansible.builtin.service:
        name: "{{ item }}"
        enabled: true
      loop:
        - greetd.service
        - zfs-import-cache.service
        - zfs-mount.service
        - zfs-import.target
        - sshd
        - libvirtd.socket

    - name: Make dash default sh # noqa: no-changed-when
      become: true
      ansible.builtin.shell: |
        [ -f /bin/dash ] && sudo ln -sf /bin/dash /bin/sh

    - name: Harden SSH
      become: true
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      loop:
        - { regexp: '^#PermitRootLogin', line: 'PermitRootLogin no' }
        - { regexp: '^#PasswordAuthentication', line: 'PasswordAuthentication no'}
      notify:
        - reload sshd

    - name: Add myself to groups
      become: true
      ansible.builtin.user:
        name: arunscape
        groups:
          - input
          - libvirt
          - games
          - video

    # todo: add when condition
    - name: Restart pipewire
      ansible.builtin.systemd_service:
        name: pipewire
        state: restarted
        scope: user

    - name: GTK prefer dark # noqa: no-changed-when
      ansible.builtin.shell: |
        gsettings set org.gnome.desktop.interface color-scheme 'prefer-dark'

  handlers:
    - name: Restart sshd
      become: true
      ansible.builtin.service:
        name: sshd
        state: reloaded
        enabled: true
